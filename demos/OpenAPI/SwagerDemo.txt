Opción 1:
---------
1) Add Nuget package: Swashbuckle.AspNetCore
2) add to startup.cs: using Swashbuckle.AspNetCore.Swagger;
3) Modificar: en el fichero generado con NSwag: "xxx.gen.cs": Microsoft.AspNetCore.Mvc.RoutePrefix(...) -> Microsoft.AspNetCore.Mvc.Route(....)
4) Para la autenticación asegurar que el [Autorize] se encuentra en el fichero "xxx.gen.cs". Al ser una clase parcial, no lo obtiene de la custom.
5) Modificar Startup.cs: Incluir en el método ConfigureServices:

            services.AddSwaggerGen(options =>
            {
                options.DescribeAllEnumsAsStrings();
                options.SwaggerDoc("v1",
                    new Info
                    {
                        Version = "1.0.0",
                        Title = "Swagger Sample Demo",
                        Description = "This is a sample demo server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).",
                        TermsOfService = "http://swagger.io/terms/",
                        License = new License()
                        {
                            Name = "Apache 2.0",
                            Url = "http://www.apache.org/licenses/LICENSE-2.0.html"
                        },
                        Contact = new Contact() { Email = "apiteam@swagger.io" }
                    }
                );

                // Set the comments path for the Swagger JSON and UI.
                var basePath = AppContext.BaseDirectory;
                var xmlPath = Path.Combine(basePath, "SampleDemo1.xml");
                options.IncludeXmlComments(xmlPath);

            });

6) Modificar Startup.cs: Incluir en el método configure(...)
            app.UseSwagger().UseSwaggerUI(options =>
            {
                options.SwaggerEndpoint("/swagger/v1/swagger.json", "Sample Demo Api V1");
            });

Opción 2:
---------
1) Add Nuget package: NSwag.AspNetCore
2) Add to Startup.cs: using NSwag.AspNetCore;
3) ...

—------------------------—
Publicando en Docker (Azure)
—------------------------—

dotnet restore ../SampleDemo1.sln 
dotnet publish ../SampleDemo1.sln -c Debug -o ./obj/Docker/publish/s

docker build . -t sampledemo1 —no-cache
docker run -d -p 5000:80 sampledemo1

docker login -u SwaggerDemoApi -p rP6HBJAw6StsEw90N=HyCOv8TBIdJRwQ swaggerdemoapi.azurecr.io
docker tag sampledemo1 swaggerdemoapi.azurecr.io/sampledemo1
docker push swaggerdemoapi.azurecr.io/sampledemo1


[Cheks and tests]
docker run -it —entrypoint /bin/bash sampledemo1 
REM docker run -it —entrypoint /bin/bash swaggerdemoapi.azurecr.io/sampledemo1

